#!/bin/bash

# exit on failures
set -e
set -o pipefail

usage() {
  echo "Check the age of your AWS access key"
  exit 1
}

while getopts "i:h" opt; do
  case $opt in
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

read -r -p "Enter your AWS username: " username

# Get access key metadata for the user
metadata=$(aws iam list-access-keys --user-name "$username")

# Check if any access keys were found
if [[ $(echo "$metadata" | jq '.AccessKeyMetadata | length') == 0 ]]
then
    echo "No access keys found for user $username"
    exit 1
fi

# Loop through the access keys and calculate their age
now=$(gdate +%s)
for key in $(echo "$metadata" | jq -r '.AccessKeyMetadata[] | @base64'); do
    key_id=$(echo "$key" | base64 --decode | jq -r '.AccessKeyId')
    create_date=$(echo "$key" | base64 --decode | jq -r '.CreateDate')
    create_date=$(gdate -d "$create_date" +%s)
    age=$(( (now - create_date) / 86400 ))

# Print access key information and age
    echo "Access key ID: $key_id"
    echo "Created on: $(gdate -d @"$create_date" +%Y-%m-%d)"
    echo "Age in days: $age"

# Check if access key is more than 180 days old and prompt user to rotate if it is
    if [[ $age -gt 180 ]]
    then
        echo "WARNING: Access key is more than 180 days old and should be rotated."
    fi
done
