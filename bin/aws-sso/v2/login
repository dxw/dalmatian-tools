#!/bin/bash

# exit on failures
set -e
set -o pipefail

usage() {
  echo "Usage: $(basename "$0") [OPTIONS]" 1>&2
  echo "  -h                     - help"
  echo "  -p <aws_sso_profile>   - AWS SSO Profile"
  echo "  -q <quiet_mode>        - Quiet mode"
  exit 1
}

AWS_SSO_PROFILE="dalmatian-login"
FORCE_RELOG=0
QUIET_MODE=0
while getopts "p:fqh" opt; do
  case $opt in
    p)
      AWS_SSO_PROFILE=$OPTARG
      ;;
    f)
      FORCE_RELOG=1
      ;;
    q)
      QUIET_MODE=1
      ;;
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

START_URL="$(aws configure get sso_start_url --profile dalmatian-login)"
AWS_SSO_CACHE_JSON="$(grep -h -e "\"$START_URL\"" ~/.aws/sso/cache/*.json || true)"
EXPIRES_AT="$(echo "$AWS_SSO_CACHE_JSON" | jq -r '.expiresAt')"
if [ -n "$EXPIRES_AT" ]
then
  EXPIRES_AT_SEC="$(gdate -d "$EXPIRES_AT" +%s)"
  EPOCH="$(aws_epoch)"
fi
if [[
  "$EPOCH" -gt "$EXPIRES_AT_SEC" ||
  -z "$EXPIRES_AT" ||
  "$FORCE_RELOG" == "1"
  ]]
then
  log_info -l "Attempting AWS SSO login ..." -q "$QUIET_MODE"
  aws sso login --profile "$AWS_SSO_PROFILE"
  log_info -l "Checking AWS SSO login was successful..." -q "$QUIET_MODE"
  AWS_SSO_CACHE_JSON="$(grep -h -e "\"$START_URL\"" ~/.aws/sso/cache/*.json || true)"
  EXPIRES_AT="$(echo "$AWS_SSO_CACHE_JSON" | jq -r '.expiresAt')"
  if [[
    "$EPOCH" -gt "$EXPIRES_AT_SEC" ||
    -z "$EXPIRES_AT"
  ]]
  then
    err "Failed to validate your sign-in with AWS SSO. Your session has expired."
    err "Please try to log out of AWS in your browser to refresh the session, and try again."
    exit 1
  fi
  log_info -l "AWS SSO login succeeded" -q "$QUIET_MODE"
  exit 0
fi

log_info -l "You're already logged in. Your existing session will expire on $EXPIRES_AT" -q "$QUIET_MODE"
