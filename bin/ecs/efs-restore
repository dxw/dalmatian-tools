#!/bin/bash

# exit on failures
set -e
set -o pipefail

usage() {
  echo "Usage: $(basename "$0") [OPTIONS]" 1>&2
  echo "  -h                     - help"
  echo "  -i <infrastructure>    - infrastructure name"
  echo "  -e <environment>       - environment name (e.g. 'staging' or 'prod')"
  echo "  -f                     - full file path from root of the mount (e.g /wp-uploads/saluki-test/FILE.jpg)"

  exit 1
}

# if there are no arguments passed exit with usage
if [ $# -eq 0 ]
then
 usage
fi

while getopts "i:e:f:h" opt; do
  case $opt in
    i)
      INFRASTRUCTURE_NAME=$OPTARG
      ;;
    e)
      ENVIRONMENT=$OPTARG
      ;;
    f)
      FILE_PATH=$OPTARG
      ;;
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

if [[
  -z "$INFRASTRUCTURE_NAME"
  || -z "$ENVIRONMENT"
  || -z "$FILE_PATH"
]]
then
  usage
fi

log_info() {
  echo "==>[INFO] $1"
} 

log_error() {
  echo "==>[ERROR] $1" >&2
}
# Retrieve the latest file system ID for the given infrastructure and environment
FILE_SYSTEM_ID=$(aws efs describe-file-systems --query "FileSystems[?Name=='${INFRASTRUCTURE_NAME}-${ENVIRONMENT}-shared-storage-efs'].FileSystemId" --output text --region eu-west-2)

if [[ -z "$FILE_SYSTEM_ID" ]]; then
  log_error "No file system found for the specified name."
  exit 1
fi

# Retrieve the list of recovery points for the file system
log_info "Retrieving recovery points for the file system..."
RECOVERY_POINTS=$(aws backup list-recovery-points-by-resource --resource-arn "arn:aws:elasticfilesystem:eu-west-2:666653442229:file-system/${FILE_SYSTEM_ID}" --query "RecoveryPoints[].RecoveryPointArn" --output json)

if [[ -z "$RECOVERY_POINTS" ]]; then
  log_error "No recovery points found for the specified file system."
  exit 1
fi

ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)

# Retrieve the latest recovery point ARN from the list
LATEST_RECOVERY_POINT_ARN=$(echo "$RECOVERY_POINTS" | jq -r '.[0]')

if [[ "$LATEST_RECOVERY_POINT_ARN" == "null" ]]; then
  log_error "No latest recovery point found for the specified file system."
  exit 1
else
  log_info "Latest Recovery Point Arn >>> $LATEST_RECOVERY_POINT_ARN"
fi

# Modify the metadata JSON file with the specific file or directory to restore
log_info "Modifying the metadata JSON file"
METADATA_FILE="/tmp/$(date +%s).metadata.json"

# Create a temporary metadata file based on the template and replace placeholders with actual values
touch "$METADATA_FILE"
echo "{\"file-system-id\": \"$FILE_SYSTEM_ID\", \"itemsToRestore\": \"[\\\"$FILE_PATH\\\"]\", \"newFileSystem\": \"false\"}" > "$METADATA_FILE"

# Restore the file using the retrieved file system ID and metadata JSON file
log_info "Starting backup restore job"
aws backup start-restore-job --no-cli-pager --recovery-point-arn "$LATEST_RECOVERY_POINT_ARN" --metadata "file://${METADATA_FILE}" --resource-type "EFS" --iam-role-arn "arn:aws:iam::${ACCOUNT_ID}:role/service-role/AWSBackupDefaultServiceRole"

# Remove the temporary metadata file
rm "$METADATA_FILE"
