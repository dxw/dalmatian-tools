#!/bin/bash

# exit on failures
set -e
set -o pipefail

. "${APP_ROOT}/lib/colors.sh"

usage() {
  echo "Description: Get the root user password for the specified RDS"
  echo
  echo "Usage: dalmatian rds $(basename "$0") -i <infrastructure> -e <environment> -r <rds>" 1>&2
  echo "  -h                     Get help with this command"
  echo "  -i <infrastructure>    Name of the infrastructure you want to target"
  echo "  -e <environment>       Environment name (e.g. 'staging' or 'prod')"
  echo "  -r <rds>               RDS name (as defined in the Dalmatian config)"
  exit 1
}

# if there are no arguments passed exit with usage
if [ $# -lt 1 ];
then
  usage
fi

while getopts "i:e:r:h" opt; do
  case $opt in
    i)
      INFRASTRUCTURE_NAME=$OPTARG
      ;;
    e)
      ENVIRONMENT=$OPTARG
      ;;
    r)
      RDS_NAME=$OPTARG
      ;;
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

if [[
  -z "$INFRASTRUCTURE_NAME"
  || -z "$RDS_NAME"
  || -z "$ENVIRONMENT"
]]; then
  fatal "Please specify all of the required parameters"
  echo
  usage
  exit 0
fi

# Remove dashes from the variables to create the RDS identifier, because dashes
# aren't allowed in RDS identifiers. Dalmatian removes them on deployment, so we
# need to remove them here to get the correct identifier.
RDS_IDENTIFIER="${INFRASTRUCTURE_NAME//-/}${RDS_NAME//-/}${ENVIRONMENT//-/}"

echo "Retrieving RDS root password from Parameter Store..."

RDS_ROOT_PASSWORD_PARAMETER=$(
  aws ssm get-parameters \
    --names "/$INFRASTRUCTURE_NAME/$RDS_IDENTIFIER-rds/password" \
    --with-decryption
)
RDS_ROOT_PASSWORD=$(
  echo "$RDS_ROOT_PASSWORD_PARAMETER" \
    | jq -r .Parameters[0].Value
)

echo "Getting RDS info..."

RDS_INFO=$(
  aws rds describe-db-instances \
    --db-instance-identifier "$RDS_IDENTIFIER"
)
RDS_ROOT_USERNAME=$(echo "$RDS_INFO" | jq -r .DBInstances[0].MasterUsername)

echo
success "Credentials for $RDS_IDENTIFIER:"
echo "Username: $RDS_ROOT_USERNAME"
echo "Password: $RDS_ROOT_PASSWORD"
