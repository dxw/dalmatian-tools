#!/bin/bash

# exit on failures
set -e
set -o pipefail

usage() {
  echo "Usage: $(basename "$0") [OPTIONS]" 1>&2
  echo "  -a                     - Set account bootstrap global tfvars"
  echo "  -i                     - Set infrastructure global tfvars"
  echo "  -h                     - help"
  exit 1
}

CONFIG_GLOBAL_TFVARS_FILE=""
while getopts "aih" opt; do
  case $opt in
    a)
      CONFIG_GLOBAL_TFVARS_FILE="$CONFIG_GLOBAL_ACCOUNT_BOOSTRAP_TFVARS_FILE"
      DEPLOY_NAME="account-bootstrap"
      ;;
    i)
      CONFIG_GLOBAL_TFVARS_FILE="$CONFIG_GLOBAL_INFRASTRUCTURE_TFVARS_FILE"
      DEPLOY_NAME="infrastructure"
      ;;
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

if [ -z "$CONFIG_GLOBAL_TFVARS_FILE" ]
then
  usage
fi

PROJECT_NAME="$(jq -r '.project_name' < "$CONFIG_SETUP_JSON_FILE")"
PROJECT_NAME_HASH="$(echo -n "$PROJECT_NAME" | sha1sum | head -c 6)"
TFVARS_BUCKET_NAME="$PROJECT_NAME_HASH-tfvars"
TFVARS_PATHS_JSON="$(jq -r < "$CONFIG_TFVARS_PATHS_FILE")"
TFVARS_DIR="${CONFIG_TFVARS_DIR/$HOME/~}"
CONFIG_GLOBAL_TFVARS_FILE_EXISTS=0

log_info -l "Checking $CONFIG_GLOBAL_TFVARS_FILE file ..." -q "$QUIET_MODE"

if aws s3api head-object --bucket "$TFVARS_BUCKET_NAME" --key "$CONFIG_GLOBAL_TFVARS_FILE" > /dev/null 2>&1
then
  aws s3 cp "s3://$TFVARS_BUCKET_NAME/$CONFIG_GLOBAL_TFVARS_FILE" "$CONFIG_TFVARS_DIR/temp-diff-check.tfvars" > /dev/null
  if ! diff "$CONFIG_TFVARS_DIR/temp-diff-check.tfvars" "$CONFIG_TFVARS_DIR/$CONFIG_GLOBAL_TFVARS_FILE" > /dev/null
  then
    err "The remote $CONFIG_GLOBAL_TFVARS_FILE file is different than your local cached copy."
    err "This is either because the remote copy has been updated, or you have already edited your local copy"
    log_info -l "What do you want to do?" -q "$QUIET_MODE"
    echo "1) Edit my local copy"
    echo "2) Use the remote copy and edit"
    echo "3) Show the diff"
    read -rp "?: " DIFF_OPTION
    if [ "$DIFF_OPTION" == "1" ]
    then
      rm "$CONFIG_TFVARS_DIR/temp-diff-check.tfvars"
    elif [ "$DIFF_OPTION" == "2" ]
    then
      mv "$CONFIG_TFVARS_DIR/temp-diff-check.tfvars" "$CONFIG_TFVARS_DIR/$CONFIG_GLOBAL_TFVARS_FILE"
    elif [ "$DIFF_OPTION" == "3" ]
    then
      diff "$CONFIG_TFVARS_DIR/temp-diff-check.tfvars" "$CONFIG_TFVARS_DIR/$CONFIG_GLOBAL_TFVARS_FILE"
      rm "$CONFIG_TFVARS_DIR/temp-diff-check.tfvars"
      exit 0
    fi
  fi
  CONFIG_GLOBAL_TFVARS_FILE_EXISTS=1
fi

GLOBAL_TFVARS_ADD_TO_PATHS_JSON=0
if [ "$CONFIG_GLOBAL_TFVARS_FILE_EXISTS" == "0" ]
then
  log_info -l "$CONFIG_GLOBAL_TFVARS_FILE doesn't exist ..." -q "$QUIET_MODE"
  read -rp "Do you want to create the $CONFIG_GLOBAL_TFVARS_FILE file now? [y/n]: " CREATE_GLOBAL_TFVARS_FILE
  if [[
    "$CREATE_GLOBAL_TFVARS_FILE" == "y"
  ]]
  then
    cp "$APP_ROOT/data/tfvars-templates/$DEPLOY_NAME.tfvars" "$CONFIG_TFVARS_DIR/$CONFIG_GLOBAL_TFVARS_FILE"
    $EDITOR "$CONFIG_TFVARS_DIR/$CONFIG_GLOBAL_TFVARS_FILE"
    GLOBAL_TFVARS_ADD_TO_PATHS_JSON=1
  fi
fi

if [ "$CONFIG_GLOBAL_TFVARS_FILE_EXISTS" == "1" ]
then
  $EDITOR "$CONFIG_TFVARS_DIR/$CONFIG_GLOBAL_TFVARS_FILE"
fi

if [ "$GLOBAL_TFVARS_ADD_TO_PATHS_JSON" == "1" ]
then
  TFVARS_PATHS_JSON=$(echo "$TFVARS_PATHS_JSON" | jq -c \
    --arg tfvars_paths_key "global-$DEPLOY_NAME" \
    --arg global_tfvars_file "$CONFIG_GLOBAL_TFVARS_FILE" \
    --arg global_tfvars_path "$TFVARS_DIR/$CONFIG_GLOBAL_TFVARS_FILE" \
    '. += { ($tfvars_paths_key): { "path": $global_tfvars_path, "key": $global_tfvars_file } }')
fi

echo "$TFVARS_PATHS_JSON" > "$CONFIG_TFVARS_PATHS_FILE"

log_info -l "$CONFIG_GLOBAL_TFVARS_FILE edited!" -q "$QUIET_MODE"

MAIN_DALMATIAN_ACCOUNT_ID="$(jq -r '.main_dalmatian_account_id' < "$CONFIG_SETUP_JSON_FILE")"
DEFAULT_REGION="$(jq -r '.default_region' < "$CONFIG_SETUP_JSON_FILE")"
MAIN_DALMATIAN_ACCOUNT="$MAIN_DALMATIAN_ACCOUNT_ID-$DEFAULT_REGION-dalmatian-main"

log_info -l "Running account bootstrap on the main Dalmatian account to upload tfvars ..." -q "$QUIET_MODE"
"$APP_ROOT/bin/dalmatian" deploy account-bootstrap -a "$MAIN_DALMATIAN_ACCOUNT" -N

read -rp "Do you want to run the $DEPLOY_NAME deployment for all accounts now? [y/n]: " RUN_APPLY

if [ "$RUN_APPLY" == "y" ]
then
  "$APP_ROOT/bin/dalmatian" deploy "$DEPLOY_NAME"
fi
