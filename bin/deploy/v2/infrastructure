#!/bin/bash

# exit on failures
set -e
set -o pipefail

usage() {
  echo "Usage: $(basename "$0") [OPTIONS]" 1>&2
  echo "  -h                       - help"
  echo "  -l                       - List infrastructures (shortcut to \`deploy list-infrastructures\`)"
  echo "  -a <dalmatian_account>   - Dalmatian account name (Optional - By default all accounts will be cycled through)"
  echo "  -i <infrastructure_name> - Infrastructure name (Optional - By default all infrastructures will be cycled through)"
  echo "  -e <environment_name>    - Environment name (Optional - By default all environments will be cycled through)"
  echo "  -w <workspace_name>      - Workspace name (Optional - Rather than providing account, infrastructure and environment)"
  echo "  -p                       - Run terraform plan rather than apply"
  echo "  -o                       - write a plan to /tmp/<dalmatian_account>-<infrastructure_name>-<environment_name>.plan to be used with -p"
  echo "  -s                       - show the plan generated by -o in json" 
  echo "  -N                       - Non-interactive mode (auto-approves terraform apply)"
  exit 1
}

DALMATIAN_ACCOUNT=""
ENVIRONMENT_NAME=""
INFRASTRUCTURE_NAME=""
WORKSPACE_NAME=""
NON_INTERACTIVE_MODE=0
PLAN=0
OUTPUT_PLAN=0
SHOW_PLAN=0
LIST_INFRASTRUCTURES=0
while getopts "la:i:e:w:Nposh" opt; do
  case $opt in
    l)
      LIST_INFRASTRUCTURES=1
      ;;
    a)
      DALMATIAN_ACCOUNT=$OPTARG
      ;;
    i)
      INFRASTRUCTURE_NAME=$OPTARG
      ;;
    e)
      ENVIRONMENT_NAME=$OPTARG
      ;;
    w)
      WORKSPACE_NAME=$OPTARG
      ;;
    p)
      PLAN=1
      ;;
    o)
      OUTPUT_PLAN=1
      ;;
    s)
      SHOW_PLAN=1
      ;;
    N)
      NON_INTERACTIVE_MODE=1
      ;;
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

if [ "$LIST_INFRASTRUCTURES" == "1" ]
then
  "$APP_ROOT/bin/dalmatian" deploy list-infrastructures
  exit 0
fi

if [[
  ! "$INFRASTRUCTURE_NAME" =~ ^[a-z]+$ &&
  -n "$INFRASTRUCTURE_NAME"
]]
then
  err "$INFRASTRUCTURE_NAME can only contain lowercase letters"
  exit 1
fi

if [[
  ! "$ENVIRONMENT_NAME" =~ ^[a-z]+$ &&
  -n "$ENVIRONMENT_NAME"
]]
then
  err "$ENVIRONMENT_NAME can only contain lowercase letters"
  exit 1
fi

OPTIONS=()
APPLY_OR_PLAN="apply"
if [ "$PLAN" == "1" ]
then
  APPLY_OR_PLAN="plan"
fi
if [ "$SHOW_PLAN" == "1" ]
then
  APPLY_OR_PLAN="show -json /tmp/$DALMATIAN_ACCOUNT-$INFRASTRUCTURE_NAME-$ENVIRONMENT_NAME.plan"
fi
OPTIONS+=("$APPLY_OR_PLAN")

if [ "$NON_INTERACTIVE_MODE" == "1" ]
then
  OPTIONS+=("--auto-approve")
fi

if [ "$OUTPUT_PLAN" == "1" ]
then
  OPTIONS+=("-out=/tmp/$DALMATIAN_ACCOUNT-$INFRASTRUCTURE_NAME-$ENVIRONMENT_NAME.plan ")
  echo "Plan will be written to /tmp/$DALMATIAN_ACCOUNT-$INFRASTRUCTURE_NAME-$ENVIRONMENT_NAME.plan"
fi

WORKSPACE_EXISTS=0
while IFS='' read -r workspace
do
  workspace=${workspace/\*/ }
  workspace=$(echo "$workspace" | xargs)
  if [[
    -n "$workspace" &&
    ( "$workspace" == "$DALMATIAN_ACCOUNT-$INFRASTRUCTURE_NAME-$ENVIRONMENT_NAME" ||
    "$workspace" == "$WORKSPACE_NAME" )
  ]]
  then
    WORKSPACE_EXISTS=1
  fi
done < <("$APP_ROOT/bin/dalmatian" terraform-dependencies run-terraform-command -c "workspace list" -i -q)

if [ -n "$WORKSPACE_NAME" ]
then
  if [ "$WORKSPACE_EXISTS" == "0" ]
  then
    err "$WORKSPACE_NAME does not exist"
    exit 1
  fi
fi

if [[
  "$WORKSPACE_EXISTS" == "0" &&
  -n "$DALMATIAN_ACCOUNT" &&
  -n "$ENVIRONMENT_NAME"
]]
then
  echo "The infrastructure $DALMATIAN_ACCOUNT-$INFRASTRUCTURE_NAME-$ENVIRONMENT_NAME does not exist."
  read -rp "Do you want to create it now? [y/n]: " CREATE_INFRASTRUCTURE
  if [ "$CREATE_INFRASTRUCTURE" != "y" ]
  then
    exit 0
  fi
  "$APP_ROOT/bin/dalmatian" terraform-dependencies run-terraform-command -c "workspace new $DALMATIAN_ACCOUNT-$INFRASTRUCTURE_NAME-$ENVIRONMENT_NAME" -i -q
  "$APP_ROOT/bin/dalmatian" terraform-dependencies get-tfvars
fi

DEPLOY_ALL="y"
if [[
  -z "$WORKSPACE_NAME" &&
  ( -z "$DALMATIAN_ACCOUNT" ||
  -z "$ENVIRONMENT_NAME" ||
  -z "$INFRASTRUCTURE_NAME" )
]]
then
  MATCH_STRING=""
  if [ -z "$DALMATIAN_ACCOUNT" ]
  then
    MATCH_STRING="*"
  else
    MATCH_STRING="$DALMATIAN_ACCOUNT"
  fi
  if [ -z "$INFRASTRUCTURE_NAME" ]
  then
    MATCH_STRING="$MATCH_STRING-*"
  else
    MATCH_STRING="$MATCH_STRING-$INFRASTRUCTURE_NAME"
  fi
  if [ -z "$ENVIRONMENT_NAME" ]
  then
    MATCH_STRING="$MATCH_STRING-*"
  else
    MATCH_STRING="$MATCH_STRING-$ENVIRONMENT_NAME"
  fi
  read -rp "Either an account, infrastructure or environment has not been provided. Do you wish to deploy all matching infrastructures '$MATCH_STRING'? [y/n]: " DEPLOY_ALL
fi

if [[
  "$DEPLOY_ALL" != "y"
]]
then
  exit 0
fi

while IFS='' read -r workspace <&9
do
  workspace=${workspace/\*/ }
  workspace=$(echo "$workspace" | xargs)
  if [[ ( ( "$DALMATIAN_ACCOUNT" == "$(echo "$workspace" | rev | cut -d'-' -f3- | rev)" ||
    -z "$DALMATIAN_ACCOUNT" ) &&
    ( "$INFRASTRUCTURE_NAME" == "$(echo "$workspace" | rev | cut -d'-' -f2 | rev)" ||
    -z "$INFRASTRUCTURE_NAME" ) &&
    ( "$ENVIRONMENT_NAME" == "$(echo "$workspace" | rev | cut -d'-' -f1 | rev)" ||
    -z "$ENVIRONMENT_NAME" ) &&
    "$workspace" != "default" &&
    -z $WORKSPACE_NAME &&
    -n "$workspace" ) ||
    ( "$WORKSPACE_NAME" == "$workspace" &&
    -n "$WORKSPACE_NAME" )
  ]]
  then
    "$APP_ROOT/bin/dalmatian" terraform-dependencies run-terraform-command -c "workspace select $workspace" -i -q
    STRING_OPTIONS="${OPTIONS[*]}"
    "$APP_ROOT/bin/dalmatian" terraform-dependencies run-terraform-command -c "$STRING_OPTIONS" -i -q
  fi
done 9< <("$APP_ROOT/bin/dalmatian" terraform-dependencies run-terraform-command -c "workspace list" -i -q)
