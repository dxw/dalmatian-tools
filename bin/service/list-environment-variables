#!/bin/bash

# exit on failures
set -e
set -o pipefail

usage() {
  echo "Usage: $(basename "$0") [options...]" 1>&2
  echo "  -h                     - help"
  echo "  -i <infrastructure>    - infrastructure name"
  echo "  -s <service>           - service name "
  echo "  -e <environment>       - environment name (e.g. 'staging' or 'prod')"
  exit 1
}

# if there are no arguments passed exit with usage
if [ $# -lt 1 ]
then
 usage
fi

while getopts "i:e:s:h" opt; do
  case $opt in
    i)
      INFRASTRUCTURE_NAME=$OPTARG
      ;;
    e)
      ENVIRONMENT=$OPTARG
      ;;
    s)
      SERVICE_NAME=$OPTARG
      ;;
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

if [[
  -z "$INFRASTRUCTURE_NAME"
  || -z "$SERVICE_NAME"
  || -z "$ENVIRONMENT"
]]
then
  usage
fi

echo "==> Retrieving env vars for $INFRASTRUCTURE_NAME/$SERVICE_NAME/$ENVIRONMENT from Parameter Store..."

aws ssm get-parameters-by-path \
  --path "/$INFRASTRUCTURE_NAME/$SERVICE_NAME/$ENVIRONMENT/" \
  --recursive \
  --with-decryption \
  | jq -r '.Parameters |sort_by(.Name) | .[] | "\(.Name)=\(.Value)"' \
  | sed -e "s#^/$INFRASTRUCTURE_NAME/$SERVICE_NAME/$ENVIRONMENT/##"
