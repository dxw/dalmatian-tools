#!/bin/bash

# exit on failures
set -e
set -o pipefail

usage() {
  echo "Usage: $(basename "$0") [OPTIONS]" 1>&2
  echo "  -h                     - help"
  echo "  -i <infrastructure>    - infrastructure name"
  echo "  -s <service>           - service name (optional)"
  echo "  -e <environment>       - environment name (e.g. 'staging' or 'prod') (optional)"
  exit 1
}

# if there are no arguments passed exit with usage
if [ $# -lt 1 ]
then
 usage
fi

ENVIRONMENT=".*"
SERVICE_NAME=".*"

while getopts "i:e:s:h" opt; do
  case $opt in
    i)
      INFRASTRUCTURE_NAME=$OPTARG
      ;;
    e)
      ENVIRONMENT=$OPTARG
      ;;
    s)
      SERVICE_NAME=$OPTARG
      ;;
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

if [[ -z "$INFRASTRUCTURE_NAME" ]]
then
  usage
fi

echo "==> Listing pipelines for $INFRASTRUCTURE_NAME $SERVICE_NAME ($ENVIRONMENT) ..."

aws codepipeline list-pipelines | jq -r --arg i "$INFRASTRUCTURE_NAME" --arg e "$ENVIRONMENT" --arg s "$SERVICE_NAME" '.pipelines[]| select(.name|test("^\($i)-\($s)-\($e)"))' | jq -r '.name'
