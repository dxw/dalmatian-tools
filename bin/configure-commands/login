#!/bin/bash

echo "Note: You must have a Dalmatian Admin account to use Dalmatian Tools"
echo ""

if ! command -v oathtool > /dev/null
then
  echo "Error: oathtool is not installed on this system"
  echo "This can be installed with homebrew:"
  echo "brew install oath-toolkit"
  exit 1
fi

DALMATIAN_CONFIG_STORE="$HOME/.config/dalmatian"
DALMATIAN_CONFIG_FILE="$DALMATIAN_CONFIG_STORE/config.json"
DALMATIAN_CREDENTIALS_FILE="$DALMATIAN_CONFIG_STORE/credentials.json.enc"

mkdir -p "$DALMATIAN_CONFIG_STORE"

DALMATIAN_ROLE="dalmatian-admin"

if ! command -v gpg > /dev/null
then
  echo "Error: GPG is not installed on this system"
  echo "Please install GPG to continue"
  echo "https://gpgtools.org/ is recommended for MacOS"
  exit 1
fi
echo "For added security, your credentials and MFA secret will be"
echo "encrypted with GPG"
echo ""
read -rp "Email associated with GPG key: " GPG_ENCRYPT_EMAIL
read -rp "AWS Access Key ID: " AWS_ACCESS_KEY_ID
read -rsp "AWS Secret Access Key: " AWS_SECRET_ACCESS_KEY
echo ""
read -rsp "AWS MFA Secret: " AWS_MFA_SECRET
echo ""

echo "==> Checking credentials..."

export AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY

CALLER_ID=$(aws sts get-caller-identity)

USER_ID=$(echo "$CALLER_ID" | jq -r '.UserId')
ACCOUNT_ID=$(echo "$CALLER_ID" | jq -r '.Account')
USER_ARN=$(echo "$CALLER_ID" | jq -r '.Arn')

echo "  User ID: $USER_ID"
echo "  Account: $ACCOUNT_ID"
echo "  Arn:     $USER_ARN"

echo "==> Saving configuration settings in $DALMATIAN_CONFIG_FILE ..."

CONFIG_JSON_STRING=$(
  jq -n \
  --arg gpg_encrypt_email "$GPG_ENCRYPT_EMAIL" \
  --arg account_id "$ACCOUNT_ID" \
  --arg dalmatian_role "$DALMATIAN_ROLE" \
  '{
    gpg_encrypt_email: $gpg_encrypt_email,
    account_id: $account_id,
    dalmatian_role: $dalmatian_role
  }'
)

echo "$CONFIG_JSON_STRING" > "$DALMATIAN_CONFIG_FILE"

echo "==> Storing credentials in $DALMATIAN_CREDENTIALS_FILE ..."

CREDENTIALS_JSON_STRING=$(
  jq -n \
  --arg aws_access_key_id "$AWS_ACCESS_KEY_ID" \
  --arg aws_secret_access_key "$AWS_SECRET_ACCESS_KEY" \
  --arg aws_mfa_secret "$AWS_MFA_SECRET" \
  '{
    aws_access_key_id: $aws_access_key_id,
    aws_secret_access_key: $aws_secret_access_key,
    aws_mfa_secret: $aws_mfa_secret
  }'
)

echo "$CREDENTIALS_JSON_STRING" | gpg \
  --quiet \
  --batch --yes \
  --encrypt \
  -r "$GPG_ENCRYPT_EMAIL" \
  --out "$DALMATIAN_CREDENTIALS_FILE"
chmod 600 "$DALMATIAN_CREDENTIALS_FILE"

echo "==> Attempting MFA..."

MFA_CODE="$(oathtool --base32 --totp "$AWS_MFA_SECRET")"

export AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY

"$APP_ROOT/bin/aws/mfa" -m "$MFA_CODE"

echo "==> Login success!"
