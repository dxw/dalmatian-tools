#!/bin/bash

# exit on failures
set -e
set -o pipefail

. "${APP_ROOT}/lib/colors.sh"

usage() {
  echo "Description: List all databases on a target RDS"
  echo
  echo "Usage: dalmatian rds $(basename "$0") -i <infrastructure> -e <environment> -r <rds>" 1>&2
  echo "  -h                     Get help with this command"
  echo "  -i <infrastructure>    Name of the infrastructure you want to target"
  echo "  -e <environment>       Environment name (e.g. 'staging' or 'prod')"
  echo "  -r <rds>               RDS name (as defined in the Dalmatian config)"
  exit 1
}

# if there are no arguments passed exit with usage
if [ $# -lt 1 ]
then
  fatal "Please populate all required parameters"
  echo
  usage
  exit 0
fi

while getopts "i:e:r:h" opt; do
  case $opt in
    i)
      INFRASTRUCTURE_NAME=$OPTARG
      ;;
    e)
      ENVIRONMENT=$OPTARG
      ;;
    r)
      RDS_NAME=$OPTARG
      ;;
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

if [[
  -z "$INFRASTRUCTURE_NAME"
  || -z "$ENVIRONMENT"
  || -z "$RDS_NAME"
]]
then
  fatal "Please specify an infrastructure, environment and RDS name"
  echo
  usage
  exit 0
fi

# Remove dashes from the variables to create the RDS identifier, because dashes
# aren't allowed in RDS identifiers. Dalmatian removes them on deployment, so we
# need to remove them here to get the correct identifier.
RDS_IDENTIFIER="${INFRASTRUCTURE_NAME//-/}${RDS_NAME//-/}${ENVIRONMENT//-/}"

echo "Retrieving RDS root password from Parameter Store..."

RDS_ROOT_PASSWORD_PARAMETER=$(
  aws ssm get-parameters \
    --names "/$INFRASTRUCTURE_NAME/$RDS_IDENTIFIER-rds/password" \
    --with-decryption
)
RDS_ROOT_PASSWORD=$(
  echo "$RDS_ROOT_PASSWORD_PARAMETER" \
    | jq -r .Parameters[0].Value
)

echo "Getting RDS info..."

RDS_INFO=$(
  aws rds describe-db-instances \
    --db-instance-identifier "$RDS_IDENTIFIER"
)
RDS_VPC=$(echo "$RDS_INFO" | jq -r .DBInstances[0].DBSubnetGroup.VpcId)

echo "Finding ECS instance..."

ECS_INSTANCES=$(
  aws ec2 describe-instances \
    --filters "Name=vpc-id,Values=$RDS_VPC" "Name=instance-state-code,Values=16" Name=tag:Name,Values="$INFRASTRUCTURE_NAME-$ENVIRONMENT*")

ECS_INSTANCE_ID=$(
  echo "$ECS_INSTANCES" \
    | jq -r .Reservations[0].Instances[0].InstanceId
)

success "Using EC2 instance ID: $ECS_INSTANCE_ID"

echo "Listing databases..."

aws ssm start-session \
  --target "$ECS_INSTANCE_ID" \
  --document-name "$RDS_IDENTIFIER-rds-db-list" \
  --parameters "RootPassword=$RDS_ROOT_PASSWORD"
