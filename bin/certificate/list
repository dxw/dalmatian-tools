#!/bin/bash

# exit on failures
set -e
set -o pipefail

usage() {
  echo "list certificates in an infrastructure"
  echo 'e.g dalmatian -i <infrastructure>'
  echo "Usage: $(basename "$0") [OPTIONS]" 1>&2
  echo "  -h                         - help"
  echo "  -i <infrastructure>        - infrastructure name"
  exit 1
}

# if there are no arguments passed exit with usage
if [ $# -eq 0 ]
then
 usage
 exit 0
fi

while getopts "i:d:s:h" opt; do
  case $opt in
    i)
      INFRASTRUCTURE_NAME=$OPTARG
      ;;
    h)
      usage
      exit;;
    *)
      usage
      exit;;
  esac
done

if [[
  -z "$INFRASTRUCTURE_NAME"
]]
then
  usage
fi

LB_CERTIFICATES=()
while IFS='' read -r cert
do
  LB_CERTIFICATES+=("$cert")
done < <(aws acm list-certificates | jq -r '.CertificateSummaryList[] | .CertificateArn')

CLOUDFRONT_CERTIFICATES=()
while IFS='' read -r cert
do
  CLOUDFRONT_CERTIFICATES+=("$cert")
done < <(aws acm list-certificates --region us-east-1 | jq -r '.CertificateSummaryList[] | .CertificateArn')

ALL_CERTIFICATES=("${LB_CERTIFICATES[@]}" "${CLOUDFRONT_CERTIFICATES[@]}")

for cert_arn in "${ALL_CERTIFICATES[@]}"
do
  if [[ "${cert_arn}" == "arn:aws:acm:us-east-1"* ]]
  then
    CERT_REGION="us-east-1"
  else
    CERT_REGION="$AWS_DEFAULT_REGION"
  fi
  aws acm describe-certificate --certificate-arn "$cert_arn" --region "$CERT_REGION" | jq -r '.Certificate | .CertificateArn + " " + .DomainName + " " + .Status'
done
