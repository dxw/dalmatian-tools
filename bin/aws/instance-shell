#!/bin/bash

# Requires the `session-manager-plugin` to be installed:
# https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html

# exit on failures
set -e
set -o pipefail

. "${APP_ROOT}/lib/colors.sh"

usage() {
  echo "Description: Start a secure shell on an EC2 instance"
  echo
  echo "Usage: dalmatian aws $(basename "$0") -i <infrastructure> [options]" 1>&2
  echo "  -h                     Get help with this command"
  echo "  -i <infrastructure>    Name of the infrastructure you want to target"
  echo
  echo "Options:"
  echo "  -l                     List available EC2 instance ids"
  echo "  -I <instance_id>       Target a specific EC2 instance"
  exit 1
}

# if there are no arguments passed exit with usage
if [ $# -eq 0 ]
then
  fatal "Please specify a target infrastructure"
  echo
  usage
  exit 0
fi

if ! command -v session-manager-plugin > /dev/null
then
  fatal "This script requires the \`session-manager-plugin\` to be installed:"
  echo "https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html"
  echo
  read -p "Enter Y to install now or anything else to exit: " SM_PLUGIN_DEP
    if [ "$SM_PLUGIN_DEP" != "${SM_PLUGIN_DEP#[Yy]}" ]
    then
      $(command -v curl) "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/mac/session-manager-plugin.pkg" -o "/tmp/session-manager-plugin.pkg"
      sudo installer -pkg /tmp/session-manager-plugin.pkg -target /
      sudo ln -s /usr/local/sessionmanagerplugin/bin/session-manager-plugin /usr/local/bin/session-manager-plugin
      rm /tmp/session-manager-plugin.pkg
      echo
      success "Continuing..."
    else
      fatal "Install session-manager-plugin before trying again"
      exit 0
    fi
  exit 0
fi

while getopts "i:I:lh" opt; do
  case $opt in
    i)
      INFRASTRUCTURE_NAME=$OPTARG
      ;;
    l)
      LIST=1
      ;;
    I)
      INSTANCE_ID=$OPTARG
      ;;
    h)
      usage
      exit;;
    *)
      usage
      exit;;
  esac
done

if [ -n "$LIST" ];
then
  echo "Finding EC2 instances..."
  INSTANCES=$(aws ec2 describe-instances --filters Name=instance-state-code,Values=16)
  AVAILABLE_INSTANCES=$(echo "$INSTANCES" | jq -r '.Reservations[].Instances[] | (.InstanceId) + " | " + (.LaunchTime)')
  echo "$AVAILABLE_INSTANCES"
  exit 0
fi


echo "==> Connecting to $INSTANCE_ID..."

aws ssm start-session --target "$INSTANCE_ID"
